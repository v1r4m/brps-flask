name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때만 실행

env:
  ecr_url: ${{ vars.ECR_URL }}
  role_arn: ${{ vars.ROLE_ARN }}
  aws_region: ${{ vars.AWS_REGION }}
  tag: latest
  ecs_service: ${{ vars.ECS_SERVICE }}
  ecs_cluster: ${{ vars.ECS_CLUSTER }}
  task_definition_family: ${{ vars.TASK_DEFINITION_FAMILY }}
  container_name: ${{ vars.CONTAINER_NAME }}

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: print env
      run: |
        echo "ECR URL: ${{ env.ecr_url }}"
        echo "Role ARN: ${{ env.role_arn }}"
        echo "AWS Region: ${{ env.aws_region }}"
        echo "Tag: ${{ env.tag }}"
        echo "ECS Service: ${{ env.ecs_service }}"
        echo "ECS Cluster: ${{ env.ecs_cluster }}"
        echo "Task Definition Family: ${{ env.task_definition_family }}"
        echo "Container Name: ${{ env.container_name }}"


    - name: Assume IAM Role (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.role_arn }}
        aws-region: ${{ env.aws_region }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Image to ECR
      run: |
        docker build -t ${{ env.ecr_url }}:${{ env.tag }} .
        docker push ${{ env.ecr_url }}:${{ env.tag }}

    - name: Fetch current task definition
      run: |
        aws ecs describe-task-definition \
          --task-definition ${{ env.task_definition_family }} \
          --query taskDefinition \
          > task-def.json

    - name: Update task definition with new image
      run: |
        jq --arg IMAGE "${{ env.ecr_url }}:${{ env.tag }}" \
           --arg NAME "${{ env.container_name }}" \
           '(.containerDefinitions[] | select(.name == $NAME) | .image) |= $IMAGE' \
           task-def.json > new-task-def.json

    - name: Register new task definition
      id: register-task
      run: |
        TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json | jq -r '.taskDefinition.taskDefinitionArn')
        echo "task_def_arn=$TASK_DEF_ARN" >> $GITHUB_ENV

    - name: Update ECS Service
      run: |
        aws ecs update-service \
          --cluster ${{ env.ecs_cluster }} \
          --service ${{ env.ecs_service }} \
          --task-definition ${{ env.task_def_arn }}
